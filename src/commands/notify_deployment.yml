---
description: |
  Report builds or deployments to Compass based on job type.

parameters:
  environment:
    default: "${CIRCLE_JOB}"
    description: |
      For deployments. Indicates the name of target environment.
      Default is the CircleCI Job Name.
    type: string
  environment_type:
    default: development
    description: |
      Indicates the category of target environment
      as defined by Atlassian
    enum:
      - production
      - staging
      - testing
      - development
      - unmapped
    type: enum
  state_path:
    default: ./circleci-orb-compass.status
    description: |
      Relative or absolute path to a store
      build state for orb.
    type: string
  token_name:
    default: CIRCLE_TOKEN
    description: |
      The name of environment variable containing
      CircleCI API Token. Required for all projects.
    type: env_var_name
steps:
  - jq/install:
      when: always
  - run:
      name: COMPASS - Setting Failure Condition
      environment:
        STATE_PATH: <<parameters.state_path>>
      command: <<include(scripts/build_fail.sh)>>
      when: on_fail
  - run:
      name: COMPASS - Setting Success Condition
      environment:
        STATE_PATH: <<parameters.state_path>>
      command: <<include(scripts/build_success.sh)>>
      when: on_success
  - run:
      name: COMPASS - Set Environment Name
      # `environment` is by default a variable name `${CIRCLE_JOB}`
      # but unlike parameters, variables are not interpolated in config.yml
      # they must evaluate inside the container as part of a step
      command: |
        echo 'export ENVIRONMENT_NAME="<<parameters.environment>>"' >> $BASH_ENV
        source $BASH_ENV
        echo "Using displayName: $ENVIRONMENT_NAME"
      when: always
  - run:
      name: Update status in Atlassian Compass
      environment:
        TOKEN_NAME: <<parameters.token_name>>
        STATE_PATH: <<parameters.state_path>>
        ENVIRONMENT_TYPE: <<parameters.environment_type>>
      command: <<include(scripts/notify_deployment.sh)>>
      when: always
